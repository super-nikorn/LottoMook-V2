import { db } from "./firebaseConfig.js";
import {
    doc,
    getDoc,
    setDoc,
    getDocs,
    collection
} from "https://www.gstatic.com/firebasejs/10.12.0/firebase-firestore.js";
import { fetchLatestLottoResults } from "./lotteryAPI.js";

// ‡∏ï‡∏£‡∏ß‡∏à‡∏ß‡πà‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏á‡∏ß‡∏î‡∏ô‡∏µ‡πâ‡∏°‡∏µ‡∏´‡∏£‡∏∑‡∏≠‡∏¢‡∏±‡∏á
export async function checkIfRoundExists(date) {
    const ref = doc(db, "recordLotteryResults", date);
    const snap = await getDoc(ref);
    return snap.exists();
}

// ‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£
export async function saveLottoResultFiltered() {
    const data = await fetchLatestLottoResults();

    if (!data) {
        console.log("‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏ß‡∏¢‡πÑ‡∏î‡πâ");
        return;
    }

    const exists = await checkIfRoundExists(data.date);
    if (exists) {
        console.log(`‚ÑπÔ∏è ‡∏á‡∏ß‡∏î ${data.date} ‡∏°‡∏µ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß‡πÉ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•`);
    }

    const filtered = {
        date: data.date,
        firstPrize: data.prizes.find(p => p.id === "prizeFirst")?.number[0] || "--",
        threeFront: data.runningNumbers.find(p => p.id === "runningNumberFrontThree")?.number || [],
        threeBack: data.runningNumbers.find(p => p.id === "runningNumberBackThree")?.number || [],
        twoDigit: data.runningNumbers.find(p => p.id === "runningNumberBackTwo")?.number[0] || "--",
    };

    const ref = doc(db, "recordLotteryResults", filtered.date);
    await setDoc(ref, filtered);
    // ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏ô console
    console.log(`‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏á‡∏ß‡∏î ${filtered.date} ‡πÅ‡∏•‡πâ‡∏ß`);
    console.log(`üéØ ‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•‡∏ó‡∏µ‡πà 1: ${filtered.firstPrize}`);
    console.log(`üî¢ 3 ‡∏ï‡∏±‡∏ß‡∏´‡∏ô‡πâ‡∏≤: ${filtered.threeFront.join(", ")}`);
    console.log(`üî¢ 3 ‡∏ï‡∏±‡∏ß‡∏ó‡πâ‡∏≤‡∏¢: ${filtered.threeBack.join(", ")}`);
    console.log(`üîö 2 ‡∏ï‡∏±‡∏ß‡∏ó‡πâ‡∏≤‡∏¢: ${filtered.twoDigit}`);
    return

}
saveLottoResultFiltered();


export async function fetchAllRounds() {
    const snapshot = await getDocs(collection(db, "recordLotteryResults"));
    const rounds = [];
    snapshot.forEach(doc => {
        rounds.push(doc.id); // doc.id ‡∏Ñ‡∏∑‡∏≠‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏Ç‡∏≠‡∏á‡∏á‡∏ß‡∏î
    });
    // ‡πÄ‡∏£‡∏µ‡∏¢‡∏á‡∏à‡∏≤‡∏Å‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î‡πÑ‡∏õ‡πÄ‡∏Å‡πà‡∏≤‡∏™‡∏∏‡∏î
    return rounds.sort((a, b) => new Date(b) - new Date(a));
}

// ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏≤‡∏á‡∏ß‡∏±‡∏•‡∏Ç‡∏≠‡∏á‡∏á‡∏ß‡∏î‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
export async function fetchRoundData(date) {
    const ref = doc(db, "recordLotteryResults", date);
    const snap = await getDoc(ref);
    if (!snap.exists()) return null;
    return snap.data();
}